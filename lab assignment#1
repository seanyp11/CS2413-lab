/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* reverseList(struct ListNode* head) {
   struct ListNode* prev = NULL;

    while (head) {
        struct ListNode* temp = head->next;
        head->next = prev;
        prev = head;
        head = temp;
    }

    return prev;
} 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* removeElements(struct ListNode* head, int val) {
    if (!head)
       return head;
    if (head->val == val)
        return head -> next = removeElements(head->next, val);
    head->next = removeElements(head->next, val);
    return head;
}
